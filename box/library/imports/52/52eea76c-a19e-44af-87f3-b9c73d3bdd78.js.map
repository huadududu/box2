{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\src\\controller/assets\\src\\controller\\BoxController.js"],"names":["CameraController","require","StageConfig","BlockConfig","CycleConfig","ToolConfig","AttributeConfig","AcceleratorConfig","EfficiencyConfig","BoxConfig","RewardConfig","GameType","GameUtils","GameState","BlockBigFactory","BlockSmallFactory","RewardItemFactory","SpriteFrameCenter","ParticleSystemCenter","SkeletonDataCenter","Global","GameHeight","GameCenterY","BaseGame","cc","Class","extends","Component","properties","gameNode","Node","camera","Camera","BlockBig","Prefab","BlockSmall","MarginsBig","MarginsSmall","RewardItem","UIBottom","Sky","Bgbz","Underground","motionStreak","MotionStreak","boxSpine","sp","Skeleton","btnbox","Button","GameMenu","treasure","upgradView","openbox","language","visible","default","type","rowNum","blockWidth","blockBlank","moveNum","margins","curMaxLine","canTouch","previousPt","Hatting","HattingPos","accelerHammer","accelerGold","efficeGold","gameState","init","onLoad","winsize","winSize","BaseHeight","height","BaseWidth","width","hammerStart","hammerEnd","preLoadAtlas","initdata","bind","GameMenuController","find","getComponent","initInfo","blocks","marginlist","hammers","rewardItem","startPos","setCompleteListener","animationName1","trackEntry","animation","name","log","trackIndex","addItems","firstOpen","playBoxSpine","node","active","setAnimation","stopBoxSpine","playHammerSpine","hammerpos","playHammers","i","undefined","setSmPosition","stopHammerSpine","addHammer","id","hammer","addComponent","info","conf","attribute","addSkeletonData","addChild","animationName","checkCanHammer","smCallback","timescale","att","parseFloat","time","timeScale","changeHammerSpine","data","skeletonData","start","eff","efficiency","coin","nodehammer","j","conf1","restart","hard","destroy","hatting","floorNum","layer","length","blockwidth","size","count","blank","addBlocks","cameraStartPosY","initTreasure","addUIBottom","resetMarginList","isValid","resetBlockList","lineinfo","addLines","getPngName","cycleID","push","topline","top","pngname","thisNum","factory","curX","curY","lineArray","left","createMargins","position","p","right","endpos","create","thisID","indexOf","cycleArry","split","getnum","randomInt","parseInt","neednumber","destroyBlock","line","row","location","texiao","getEffByBlock","console","addParticleForNode","removeFromParent","destroyUpdate","cameraCentPosY","checkCanDestroy","myinfo","exp","gold","updateDate","saveExp","saveGold","maxLineNum","max","totoalRowNum","maxline","move","oldY","getPositionY","newY","moveY","action1","moveTo","runAction","ralmovelength","action2","x","y","posbottom","totoal","skyposy","bzYbottom","other","setPositionY","realwidth","maxrow","range","geScreenRange","canclick","curline","num","getPngId","cameraPosY","min","maxPosY","canshowy","Math","floor","cameraY","gameY","realx","realy","hamX","hamY","updateTouch","point","touchStartCallBack","end","setPositionX","reset","touchCancelCallBack","isTouching","touchEndCallBack","touchMoveCallBack","onClickTreasure","event","maxlinenum","touchEndPoint","getLocation","update","eventcallback","string","accleleratorChange","accleleratorrRecover","toolChange","efficiencyAdd","changeHammerSpeed","updateButtom","speedHammer","speedGold","speed","changeGoldSpeed","bool","checkCanAdd","saveHammer","addAdTime","mess","costtype","cost","gem","next","confArry","unlock","openAdTimes","needlvl","level","inviteFriends","boxID","box","rewardID","reward","itemdata","random","z","str","rewardarry","createRewardItem","golds","gems","saveGem","BoxID","BoxConf","normalSprite","getFrameFromAtlas","icon","pressedSprite","hoverSprite","disabledSprite","addSkeletonDataWait","action","callFunc","setFinish","sequence","jumptime","saveEfficiency","onClickBtnaddGem","onClickBtnaddGold","onClickBtnsubGem","onClickBtnsubGold"],"mappings":"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","file":"BoxController.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\src\\controller","sourcesContent":["/**\r\n * Created by bing on 20/04/2018.\r\n */\r\n\r\n//负责head展现和变换。\r\nconst CameraController = require('CameraController');\r\nlet StageConfig = require(\"StageConfig\");\r\nlet BlockConfig = require(\"BoxConfig1\");\r\nlet CycleConfig = require(\"CycleConfig\");\r\nlet ToolConfig = require(\"ToolConfig\");\r\nlet AttributeConfig = require(\"AttributeConfig\");\r\nlet AcceleratorConfig = require(\"AcceleratorConfig\");\r\nlet EfficiencyConfig = require(\"EfficiencyConfig\");\r\nlet BoxConfig = require(\"BoxConfig\");\r\nlet RewardConfig = require(\"RewardConfig\");\r\n\r\n\r\nlet GameType = require(\"GameType\");\r\nlet GameUtils = require(\"GameUtils\");\r\nlet GameState = require(\"GameState\");\r\nlet BlockBigFactory = require(\"BlockBigFactory\");\r\nlet BlockSmallFactory = require(\"BlockSmallFactory\");\r\nlet RewardItemFactory = require(\"RewardItemFactory\");\r\nlet SpriteFrameCenter = require(\"SpriteFrameCenter\");\r\nlet ParticleSystemCenter = require(\"ParticleSystemCenter\");\r\nlet SkeletonDataCenter = require(\"SkeletonDataCenter\");\r\n// let GameMenuController = require('GameMenuController');\r\n\r\nlet Global = require('Global');\r\n\r\nconst GameHeight = 514;\r\nconst GameCenterY = 0;\r\nconst BaseGame = GameHeight/2;\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        gameNode: cc.Node,\r\n        camera: cc.Camera,\r\n        BlockBig: cc.Prefab,\r\n        BlockSmall: cc.Prefab,\r\n        MarginsBig: cc.Prefab,\r\n        MarginsSmall: cc.Prefab,\r\n        RewardItem: cc.Prefab,\r\n        UIBottom: cc.Prefab,\r\n        Sky: cc.Node,\r\n        Bgbz: cc.Node,\r\n        Underground: cc.Node,\r\n        motionStreak: cc.MotionStreak,\r\n        // hammer: sp.Skeleton,\r\n        boxSpine: sp.Skeleton,\r\n        btnbox: cc.Button,\r\n        GameMenu: cc.Node,\r\n        treasure: cc.Button,\r\n        upgradView: cc.Node,\r\n        openbox: cc.Node,\r\n        // GameMenuController: GameMenuController,\r\n        language: {\r\n            visible: false,\r\n            default: \"English\"\r\n        },\r\n        type: {\r\n            visible: false,\r\n            default: 0\r\n        },\r\n        rowNum: {\r\n            visible: false,\r\n            default: 5\r\n        },\r\n        blockWidth: 100,\r\n        blockBlank: {\r\n            visible: false,\r\n            default: 0\r\n        },\r\n        moveNum: {\r\n            visible: false,\r\n            default: 0\r\n        },\r\n        margins: {\r\n            visible: false,\r\n            default: 0\r\n        },\r\n        curMaxLine: {\r\n            visible: false,\r\n            default: 0\r\n        },\r\n        canTouch: {\r\n            visible: false,\r\n            default: true\r\n        },\r\n        previousPt: {\r\n            visible: false,\r\n            default: null\r\n        },\r\n        Hatting: {\r\n            visible: false,\r\n            default: false\r\n        },\r\n        HattingPos: {\r\n            visible: false,\r\n            default: null\r\n        },\r\n        accelerHammer: {\r\n            visible: false,\r\n            default: 1\r\n        },\r\n        accelerGold: {\r\n            visible: false,\r\n            default: 1\r\n        },\r\n        efficeGold: 0,\r\n        gameState: GameState.init,//0 init 1 playing 2 rolling 3 end\r\n    },\r\n\r\n\r\n    onLoad: function () {\r\n        this.winsize = cc.winSize;\r\n        this.BaseHeight = this.winsize.height / 2;\r\n        this.BaseWidth = this.winsize.width / 2;\r\n        this.hammerStart = 1;//表示锤子的起始id\r\n        this.hammerEnd = 10;//表示锤子的最后一个id\r\n\r\n\r\n\r\n        SpriteFrameCenter.preLoadAtlas(\"png/box\", this.initdata.bind(this));\r\n        this.GameMenuController = cc.find(\"Canvas/GameMenu\").getComponent(\"GameMenuController\");\r\n        Global.initInfo();\r\n        this.blocks = [];\r\n        this.marginlist = [];\r\n        this.hammers = {};\r\n        this.rewardItem = [];\r\n        this.accelerHammer = 1;\r\n        this.accelerGold = 1;\r\n        this.startPos = -GameHeight / 2;\r\n        this.boxSpine.setCompleteListener(trackEntry => {\r\n            var animationName1 = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            cc.log(\"recordSpine [track %s][animation %s] end.\", trackEntry.trackIndex, animationName1);\r\n            // this.restart();\r\n            this.addItems();\r\n\r\n        });\r\n        this.firstOpen = true;\r\n    },\r\n    playBoxSpine: function () {\r\n        this.boxSpine.node.active = true;\r\n        this.boxSpine.setAnimation(0, \"newAnimation\", false);\r\n    },\r\n    stopBoxSpine: function () {\r\n        this.boxSpine.node.active = false;\r\n    },\r\n    playHammerSpine: function (hammerpos) {\r\n\r\n        this.hammers[hammerpos].node.active = true;\r\n        this.hammers[hammerpos].setAnimation(0, \"newAnimation\", true);\r\n    },\r\n    playHammers: function () {\r\n        for (var i = this.hammerStart; i <= this.hammerEnd; i++) {\r\n            if (this.hammers[i] != undefined) {\r\n                this.setSmPosition(i);\r\n            }\r\n        }\r\n    },\r\n    stopHammerSpine: function (hammerpos) {\r\n        this.hammers[hammerpos].node.active = false;\r\n    },\r\n    addHammer: function (id) {\r\n        let node = new cc.Node();\r\n        let hammer = node.addComponent(sp.Skeleton);\r\n        let info = ToolConfig[id];\r\n        let animation = info.animation;\r\n        let conf = AttributeConfig[info.attribute];\r\n\r\n        SkeletonDataCenter.addSkeletonData(animation, hammer);\r\n        this.GameMenu.addChild(node);\r\n        this.hammers[id] = hammer;\r\n        hammer.node.active = false;\r\n        hammer.setCompleteListener(trackEntry => {\r\n            var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            cc.log(\"HammerSpine [track %s][animation %s] end.\", trackEntry.trackIndex, animationName);\r\n            hammer.node.active = false;\r\n            if (this.checkCanHammer(id)) {\r\n                this.smCallback(id);\r\n            }\r\n        });\r\n        let timescale = 0.17 * conf.att / parseFloat(conf.time) * this.accelerHammer;\r\n        hammer.timeScale = timescale;\r\n    },\r\n    changeHammerSpine: function (data) {\r\n        this.hammer.skeletonData = data;\r\n    },\r\n    start: function () {\r\n        this.GameMenuController.initInfo();\r\n        this.hammers = {};\r\n        let timescale = 1;\r\n        let hammer = Global.hammer;\r\n        for (let eff in Global.efficiency) {\r\n            if ('coin' in Global.efficiency[eff]) {\r\n                this.efficeGold += Global.efficiency[eff].coin - 1;\r\n            }\r\n\r\n        }\r\n        for (var i = this.hammerStart; i <= this.hammerEnd; i++) {\r\n            if (hammer[i] == undefined)\r\n                continue;\r\n            let node = new cc.Node();\r\n            let nodehammer = node.addComponent(sp.Skeleton);\r\n            let info = ToolConfig[i];\r\n            let animation = info.animation;\r\n            SkeletonDataCenter.addSkeletonData(animation, nodehammer);\r\n            this.GameMenu.addChild(node);\r\n            this.hammers[hammer[i].id] = nodehammer;\r\n            nodehammer.node.active = false;\r\n            let j=i;\r\n            nodehammer.setCompleteListener(trackEntry => {\r\n                var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n                cc.log(\"HammerSpine [track %s][animation %s] end.\", trackEntry.trackIndex, animationName);\r\n                nodehammer.node.active = false;\r\n                if (this.checkCanHammer(j)) {\r\n                    this.smCallback(j);\r\n                }\r\n            });\r\n            let attribute = Global.hammer[i].attribute;\r\n            let conf1 = AttributeConfig[attribute];\r\n            nodehammer.timeScale = 0.17 * conf1.att / parseFloat(conf1.time) * this.accelerHammer;\r\n        }\r\n\r\n    },\r\n    restart: function () {\r\n        if (Global.hard < 10) {\r\n            Global.hard++;\r\n        }\r\n        this.boxSpine.node.active = false;\r\n        for (let i = 1; i < 4; i++) {\r\n            // let node = this.rewardItem[i];\r\n            this.rewardItem[i].destroy();\r\n            // if(cc.isValid( node)){\r\n            //     node.destroy();\r\n            // }\r\n        }\r\n        this.rewardItem = [];\r\n        // this.addItems();\r\n        this.initdata();\r\n        this.gameState = GameState.hatting;\r\n\r\n    },\r\n    initdata: function () {\r\n        let floorNum = StageConfig[Global.hard].layer;\r\n        for (var i = 0; i < BlockConfig.length; i++) {\r\n            if (BlockConfig[i].blockwidth == StageConfig[Global.hard].size) {\r\n                this.type = BlockConfig[i].type;\r\n                break;\r\n            }\r\n        }\r\n        this.rowNum = BlockConfig[this.type].count;\r\n        this.blockWidth = BlockConfig[this.type].blockwidth;\r\n        this.blockBlank = BlockConfig[this.type].blank;\r\n        this.margins = BlockConfig[this.type].margins;\r\n\r\n        this.addBlocks();\r\n        this.cameraStartPosY();\r\n        this.btnbox.node.active = true;\r\n        this.playHammers();\r\n        this.initTreasure();\r\n        if (this.firstOpen) {\r\n            this.GameMenuController.addUIBottom();\r\n            this.firstOpen = false;\r\n        }\r\n\r\n    },\r\n    checkCanHammer: function (id) {\r\n        var hammer = Global.hammer;\r\n        if (hammer[id] != undefined && hammer[id].attribute != -1)\r\n            return true;\r\n        return false;\r\n    },\r\n    resetMarginList: function () {\r\n        if (this.marginlist.length > 0) {\r\n            for (let i = 0; i < this.marginlist.length; i++) {\r\n                let node = this.marginlist[i];\r\n                if (cc.isValid(node)) {\r\n                    node.destroy();\r\n                }\r\n            }\r\n        }\r\n        this.marginlist = [];\r\n    },\r\n    resetBlockList: function () {\r\n        if (this.blocks.length > 0) {\r\n            for (let i = 0; i < this.blocks.length; i++) {\r\n                for (let j = 0; j < this.blocks[i].length; j++) {\r\n                    let node = this.blocks[i][j];\r\n                    if (cc.isValid(node)) {\r\n                        node.destroy();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.blocks = [];\r\n    },\r\n    //--------- block -----------------------\r\n    addBlocks: function () {\r\n\r\n        this.resetBlockList();\r\n        this.resetMarginList();\r\n        let floorNum = StageConfig[Global.hard].layer;\r\n        for (var i = 0; i < floorNum - 1; i++) {\r\n\r\n            var lineinfo = this.addLines(this.getPngName(StageConfig[Global.hard].cycleID, i), i);\r\n\r\n            this.blocks.push(lineinfo);\r\n            lineinfo = [];\r\n        }\r\n        let topline = this.addLines(StageConfig[Global.hard].top, i);\r\n        this.blocks.push(topline);\r\n    },\r\n    addLines: function (pngname, thisNum) {\r\n\r\n        let conf = BlockConfig[this.type];\r\n        let count = conf.count;\r\n        let factory = this.type == 0 ? BlockBigFactory : BlockSmallFactory;\r\n        let curX = conf.margins + conf.blank - this.BaseWidth;\r\n        let curY = thisNum * (this.blockWidth + conf.blank) + this.startPos;\r\n        let lineArray = [];\r\n        let left = factory.createMargins(pngname);\r\n\r\n        left.position = cc.p(conf.margins / 2 - this.BaseWidth, curY + this.blockWidth / 2);\r\n        this.gameNode.addChild(left);\r\n        this.marginlist.push(left);\r\n        let right = factory.createMargins(pngname);\r\n        let endpos = this.BaseWidth - conf.margins / 2;\r\n        right.position = cc.p(endpos, curY + this.blockWidth / 2);\r\n        this.gameNode.addChild(right);\r\n        this.marginlist.push(right);\r\n\r\n        for (var i = 0; i < count; i++) {\r\n            let node = factory.create(pngname);\r\n            node.position = cc.p(curX + this.blockWidth / 2, curY + this.blockWidth / 2);\r\n            curX += this.blockWidth + conf.blank;\r\n            this.gameNode.addChild(node);\r\n            lineArray.push(node);\r\n        }\r\n\r\n        return lineArray;\r\n    },\r\n\r\n    //根据 获得 图片的名字\r\n    getPngName(cycleID, thisNum) {\r\n        let thisID;\r\n        if (cycleID.indexOf(\";\") != -1) {\r\n            let cycleArry = cycleID.split(\";\");\r\n            let getnum = GameUtils.randomInt(0, cycleArry.length - 1);\r\n            thisID = cycleArry[getnum];\r\n        } else {\r\n            thisID = parseInt(cycleID);\r\n        }\r\n        let neednumber = 0;\r\n        for (var i = 1; i <= 10; i++) {\r\n            if (CycleConfig[thisID][\"num\" + i] == 0) {\r\n                i = 0;\r\n                continue;\r\n            }\r\n            neednumber += CycleConfig[thisID][\"num\" + i];\r\n            if (neednumber >= thisNum) {\r\n                return CycleConfig[thisID][\"block\" + i]\r\n            }\r\n            if (i == 10) {\r\n                i = 0;\r\n            }\r\n        }\r\n    },\r\n    //销毁砖块\r\n    destroyBlock: function (line, row) {\r\n\r\n        if (!this.blocks[line])\r\n            return;\r\n        let node = this.blocks[line][row];\r\n\r\n        if (cc.isValid(node)) {\r\n            let location = this.hammerpos(line, row);\r\n            let texiao = this.getEffByBlock(line, row);\r\n             console.log(\"destroylog:\", line, \":\", row, location);\r\n            ParticleSystemCenter.addParticleForNode(texiao + \".plist\", this.GameMenuController.node, location);\r\n            node.removeFromParent(true);\r\n            this.blocks[line][row] = null;\r\n            this.destroyUpdate();\r\n            this.cameraCentPosY();\r\n        }\r\n\r\n    },\r\n    checkCanDestroy: function (line, row) {\r\n        if (!this.blocks[line] || !this.blocks[line][row])\r\n            return false;\r\n        let floorNum = StageConfig[Global.hard].layer;\r\n        if (line >= floorNum - 1)\r\n            return true;\r\n        let node;\r\n        node = this.blocks[line + 1][row];\r\n        if (!cc.isValid(node)) {\r\n            return true;\r\n        }\r\n        if (line > 0) {\r\n            node = this.blocks[line - 1][row];\r\n            if (!cc.isValid(node)) {\r\n                return true;\r\n            }\r\n        }\r\n        if (row > 0 && row < this.rowNum - 1) {\r\n            node = this.blocks[line][row - 1];\r\n            if (!cc.isValid(node)) {\r\n                return true;\r\n            }\r\n            node = this.blocks[line][row + 1];\r\n            if (!cc.isValid(node)) {\r\n                return true;\r\n            }\r\n        } else if (row == 0) {\r\n            node = this.blocks[line][row + 1];\r\n            if (!cc.isValid(node)) {\r\n                return true;\r\n            }\r\n        } else if (row == this.rowNum - 1) {\r\n            node = this.blocks[line][row - 1];\r\n            if (!cc.isValid(node)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    destroyUpdate: function () {\r\n\r\n        let myinfo = {};\r\n        myinfo.exp = Global.exp + 1;\r\n        myinfo.gold = Global.gold + 1 * (this.accelerGold) + this.efficeGold;\r\n        this.GameMenuController.updateDate(myinfo);\r\n        Global.saveExp(myinfo.exp);\r\n        Global.saveGold(myinfo.gold);\r\n    },\r\n    //--------- block -----------------------\r\n    maxLineNum: function () {\r\n        var max = 0;\r\n        let floorNum = StageConfig[Global.hard].layer;\r\n        for (var i = 0; i < floorNum; i++) {\r\n            for (var j = 0; j < this.rowNum; j++) {\r\n                if (this.blocks && this.blocks[i] && this.blocks[i][j]) {\r\n                    var node = this.blocks[i][j];\r\n                    if (!cc.isValid(node))\r\n                        continue;\r\n                    // sss\r\n                    if (i > max) {\r\n                        max = i;\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return max;\r\n    },\r\n\r\n    totoalRowNum: function (line) {//line 行拥有点的数量\r\n        var max = 0;\r\n        for (var j = 0; j < this.rowNum; j++) {\r\n            var node = this.blocks[line][j];\r\n            if (!cc.isValid(node))\r\n                continue;\r\n            max++;\r\n        }\r\n        return max;\r\n    },\r\n\r\n    //************camera 相关设置 start **********************\r\n    cameraCentPosY: function () {\r\n\r\n        let maxline = this.maxLineNum();\r\n        if (this.curMaxLine <= maxline) {\r\n            return;\r\n        }\r\n        let move = this.curMaxLine - maxline;\r\n        this.curMaxLine = maxline;\r\n        let oldY = this.camera.node.getPositionY();\r\n        if (oldY <= 0) {\r\n            return;\r\n        }\r\n        let newY = oldY - this.blockWidth * move;\r\n        let moveY = 0;\r\n        if (newY >= 0) {\r\n            moveY = newY;\r\n        } else {\r\n            moveY = 0;\r\n        }\r\n        let location = cc.p(0, moveY);\r\n        let action1 = cc.moveTo(0.1, location);\r\n        this.camera.node.runAction(action1);\r\n        let ralmovelength = oldY - newY;\r\n        for (var i = this.hammerStart; i < this.hammerEnd; i++) {\r\n            if(this.hammers[i] != undefined){\r\n                let location=this.hammers[i].node.position;\r\n                let action2 = cc.moveTo(0.1,{x:location.x,y:location.y+ralmovelength})\r\n                this.hammers[i].node.runAction(action2);\r\n            }\r\n        }\r\n        // this.camera.node.setPositionY(moveY);\r\n\r\n\r\n    },\r\n\r\n    cameraStartPosY: function () {\r\n        let floorNum = StageConfig[Global.hard].layer;\r\n        let height = floorNum * (this.blockWidth + this.blockBlank);\r\n        //地下\r\n        this.Underground.height = height;\r\n        let posbottom = (height - GameHeight) / 2;\r\n        this.Underground.y = posbottom;\r\n        //地面\r\n        let totoal = this.Bgbz.height + height - 50;\r\n        let skyposy;\r\n        let bzYbottom;\r\n        let other = GameHeight - totoal;\r\n        bzYbottom = (totoal + height - GameHeight) / 2 - 25;\r\n        this.Bgbz.y = bzYbottom;\r\n        if (other > 0) {\r\n            this.Sky.active = true;\r\n            this.Sky.height = other + 10;\r\n            skyposy = (GameHeight - other) / 2;\r\n            this.Sky.y = skyposy;\r\n            this.camera.node.setPositionY(0);\r\n        } else {\r\n            this.Sky.active = false;\r\n            this.camera.node.setPositionY(-other);\r\n\r\n        }\r\n        this.curMaxLine = floorNum - 1;\r\n    },\r\n\r\n\r\n    //************camera 相关设置 end **********************\r\n    //*********** 锤子 相关设置  start***************\r\n    setSmPosition: function (hammerpos) {\r\n        let realwidth = this.blockWidth + this.blockBlank;\r\n        let maxline = this.curMaxLine;\r\n        let maxrow = this.totoalRowNum(0);\r\n        if (maxline == 0 && maxrow == 0) {\r\n            this.HattingPos = null;\r\n            // this.sm.node.visible = false;\r\n            this.hammers[hammerpos].node.active = false;\r\n            return;\r\n        }\r\n        this.hammers[hammerpos].node.active = true;\r\n        let range = this.geScreenRange();\r\n        let line = this.curMaxLine;\r\n        let find = false;\r\n        let canclick = [];\r\n        let curline = line;\r\n        for (; curline >= 0; curline--) {\r\n            for (var i = 0; i < this.rowNum; i++) {//当前行可以删除的\r\n                if (this.blocks[curline] && this.checkCanDestroy(curline, i)) {\r\n                    let find = false;\r\n                    for (var j = this.hammerStart; j <= this.hammerEnd; j++) {\r\n                        if (this.HattingPos && this.HattingPos[j]) {\r\n                            if (this.HattingPos[j].x == curline && i == this.HattingPos[j].y) {\r\n                                find = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (!find) {\r\n                        canclick.push(i);\r\n                    }\r\n                }\r\n            }\r\n            if (canclick.length > 0)\r\n                break;\r\n        }\r\n        if (canclick.length == 0) {\r\n            this.HattingPos[hammerpos] = null;\r\n            return;\r\n        }\r\n        let num = GameUtils.randomInt(0, canclick.length - 1);\r\n        let row = canclick[num];\r\n        let location = this.hammerpos(line, row);\r\n        if (this.HattingPos == null) {\r\n            this.HattingPos = {};\r\n        }\r\n        this.HattingPos[hammerpos] = {x: line, y: row};\r\n        this.hammers[hammerpos].node.position = location;\r\n        this.playHammerSpine(hammerpos);\r\n    },\r\n    //根据小块的位置 过的特效文件\r\n    getEffByBlock(line, row) {\r\n\r\n        let type = this.type == 0 ? \"BlockBig\" : \"BlockSmall\";\r\n        let node = this.blocks[line][row].getComponent(type);\r\n        return node.getPngId();\r\n    },\r\n    geScreenRange: function () {\r\n        let max = this.curMaxLine;\r\n        let cameraPosY = this.camera.node.getPositionY();\r\n        let min = 0;\r\n        let realwidth = this.blockWidth + this.blockBlank;\r\n        if (cameraPosY <= this.BaseHeight) {\r\n            min = 0;\r\n        } else {\r\n            let maxPosY = max * realwidth;\r\n            let canshowy = (maxPosY - cameraPosY + this.BaseHeight) / realwidth;\r\n            min = Math.floor(max - canshowy);\r\n        }\r\n        return {max: max, min: min};\r\n    },\r\n    //根据块的位置计算锤子的位置\r\n    hammerpos: function (line, row) {\r\n        let cameraY = this.camera.node.getPositionY();\r\n        let gameY = this.gameNode.y;\r\n        let realwidth = this.blockWidth + this.blockBlank;\r\n        let realx = row * realwidth + this.margins + this.blockBlank;\r\n        let realy = line * realwidth - cameraY ;\r\n        let hamX = realx - this.BaseWidth - 42 + this.blockWidth;\r\n        let hamY = realy - 42;\r\n        return cc.p(hamX, hamY);\r\n\r\n    },\r\n    smCallback: function (hammerpos) {\r\n        if (this.HattingPos != null && this.HattingPos[hammerpos] != null) {\r\n\r\n            let y = this.HattingPos[hammerpos].y;\r\n            let x = this.HattingPos[hammerpos].x;\r\n            console.log(\"hammer:\",x,y);\r\n            if (cc.isValid(this.blocks[x][y])) {\r\n                this.destroyBlock(x, y);\r\n            }\r\n\r\n            this.setSmPosition(hammerpos);\r\n\r\n        }\r\n    },\r\n    //*********** 锤子 相关设置  end*****************\r\n\r\n    updateTouch: function (point) {\r\n        let cameraY = this.camera.node.getPositionY();\r\n        let gameY = this.gameNode.y;\r\n        let realwidth = this.blockWidth + this.blockBlank;\r\n        var line = Math.floor((point.y +cameraY  -205) / realwidth);\r\n        var row = Math.floor((point.x - this.margins - this.blockBlank) / realwidth);\r\n        let find = false;\r\n        if (this.checkCanDestroy(line, row)) {\r\n            for (var i = this.hammerStart; i <= this.hammerEnd; i++) {\r\n                if (this.HattingPos != null && this.HattingPos[i] != null && this.HattingPos[i] != undefined) {\r\n                    if (this.HattingPos[i].x == line && this.HattingPos[i].y == row) {\r\n                        this.hammers[i].node.active = false;\r\n                        // this.smCallback(i);\r\n\r\n                        this.destroyBlock(line, row);\r\n                        this.setSmPosition(i);\r\n                        find = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if (!find) {\r\n                this.destroyBlock(line, row);\r\n            }\r\n        }\r\n    },\r\n    touchStartCallBack: function (location) {\r\n        if (!this.canTouch) {\r\n            return;\r\n        }\r\n        if (this.gameState == GameState.end) {\r\n            this.openbox.active = false;\r\n            this.restart();\r\n        }\r\n        if (location.x < this.margins || location.x > (2 * this.BaseWidth - this.margins)) {\r\n            // this.motionStreak.reset();\r\n            return;\r\n        }\r\n        console.log(\"touchStartCallBack\");\r\n        this.previousPt = location;\r\n        this.motionStreak.node.setPositionX(location.x - this.BaseWidth);\r\n        this.motionStreak.node.setPositionY(location.y - this.BaseHeight);\r\n         this.motionStreak.reset();\r\n\r\n        // this.isTouching = false;\r\n    },\r\n\r\n    touchCancelCallBack: function (location) {\r\n        this.updateTouch(location);\r\n        this.isTouching = false;\r\n         this.motionStreak.reset();\r\n    },\r\n\r\n    touchEndCallBack: function (location) {\r\n        // this.touchPosition(location);\r\n        this.updateTouch(location);\r\n        this.isTouching = false;\r\n        console.log(\"touchEndCallBack\");\r\n        this.motionStreak.reset();\r\n    },\r\n    touchMoveCallBack: function (location) {\r\n        if (!this.canTouch) {\r\n            return;\r\n        }\r\n        if (location.x < this.margins || location.x > (2 * this.BaseWidth - this.margins\r\n            || location.y < 216)) {\r\n            this.motionStreak.reset();\r\n            return;\r\n        }\r\n        this.updateTouch(location);\r\n        this.previousPt = location;\r\n        this.motionStreak.node.setPositionX(location.x - this.BaseWidth);\r\n        this.motionStreak.node.setPositionY(location.y - this.BaseHeight);\r\n    },\r\n\r\n    onClickTreasure: function (event) {\r\n        var maxlinenum = this.maxLineNum();\r\n        var totoalRowNum = this.totoalRowNum(0);\r\n        if (maxlinenum != 0 || totoalRowNum != 0) {\r\n            this.touchEndPoint = event.getLocation();\r\n\r\n            this.updateTouch(this.touchEndPoint);\r\n            return;\r\n        }\r\n        this.btnbox.node.active = false;\r\n        this.gameState = GameState.end;\r\n        this.canTouch = false;\r\n        this.openbox.active= true;\r\n        this.playBoxSpine();\r\n    },\r\n    update: function () {\r\n        // this.cameraCentPosY();\r\n    },\r\n    eventcallback: function (type, id, string = null) {\r\n        // let node= this.itemList.indexOf(sender);\r\n        switch (type) {\r\n            case 0:\r\n                if (string == null)\r\n                    this.accleleratorChange(id);\r\n                else {\r\n                    if (string == 'finish') {\r\n                        this.accleleratorrRecover(id);\r\n                    }\r\n                }\r\n                break;\r\n            case 1:\r\n                this.toolChange(id);\r\n                break;\r\n            case 2:\r\n                this.efficiencyAdd(id);\r\n                break;\r\n        }\r\n    },\r\n    accleleratorChange: function (id) {\r\n        let conf = AcceleratorConfig[id];\r\n        Global['bar' + id] = conf.time;\r\n        this.changeHammerSpeed();\r\n        this.GameMenuController.updateButtom();\r\n\r\n    },\r\n    accleleratorrRecover: function (id) {\r\n        this.changeHammerSpeed();\r\n        this.GameMenuController.updateButtom();\r\n    },\r\n\r\n    changeHammerSpeed: function () {\r\n        let speedHammer = 0;\r\n        let speedGold = 0;\r\n        for (let i = 1; i <= 2; i++) {\r\n            if (Global['bar' + i] > 0) {\r\n                speedHammer += AcceleratorConfig[i].speed;\r\n                speedGold += AcceleratorConfig[i].coin;\r\n            }\r\n        }\r\n\r\n\r\n        if (speedHammer == 0) {\r\n            speedHammer = 1;\r\n        }\r\n        if (speedGold == 0) {\r\n            speedGold = 1;\r\n        }\r\n        this.accelerHammer = speedHammer;\r\n        this.accelerGold = speedGold;\r\n        for (var i = this.hammerStart; i <= this.hammerEnd; i++) {\r\n            if (this.hammers[i] != undefined) {\r\n                let conf1 = AttributeConfig[Global.hammer[i].attribute];\r\n                this.hammers[i].timeScale = 0.17 * (conf1.att / parseFloat(conf1.time)) * this.accelerHammer;\r\n            }\r\n        }\r\n    },\r\n    changeGoldSpeed: function () {\r\n\r\n    },\r\n    toolChange: function (id) {\r\n        let info = ToolConfig[id];\r\n\r\n        if (Global.hammer[id] == undefined) {\r\n            let bool = this.checkCanAdd(id);\r\n            if (bool) {\r\n                Global.hammer[id] = {id: id, attribute: info.attribute};\r\n                Global.saveHammer(Global.hammer);\r\n                this.addHammer(id);\r\n                this.setSmPosition(id);\r\n            } else {\r\n                this.addAdTime(id);\r\n            }\r\n            this.GameMenuController.updateButtom();\r\n        } else {\r\n\r\n            let conf = AttributeConfig[Global.hammer[id].attribute];\r\n            let mess = {};\r\n\r\n            if (conf.costtype = 1001) {\r\n                Global.gold -= conf.cost;\r\n                mess['gold'] = Global.gold;\r\n            } else if (conf.costtype = 1002) {\r\n                Global.gem -= conf.cost;\r\n                mess['gem'] = Global.gem;\r\n            }\r\n            if (conf.next != -1) {\r\n                Global.hammer[id].attribute = conf.next;\r\n                let conf1 = AttributeConfig[conf.next];\r\n                Global.saveHammer(Global.hammer);\r\n                this.hammers[id].timeScale = 0.17 * (conf1.att / parseFloat(conf1.time)) * this.accelerHammer;\r\n            }\r\n            this.GameMenuController.updateDate(mess);\r\n        }\r\n    },\r\n    checkCanAdd: function (id) {\r\n        let conf = ToolConfig[id];\r\n        let thisID;\r\n        let confArry;\r\n        if (\"unlock\" in conf) {\r\n            if (conf.unlock.indexOf(\";\") != -1) {\r\n                confArry = conf.unlock.split(\";\");\r\n                thisID = confArry[0];\r\n            } else {\r\n                thisID = parseInt(conf.unlock);\r\n            }\r\n            if (thisID == -1) {\r\n                return true;\r\n            }\r\n            if (thisID == 0) {//点击激活\r\n                return true;\r\n            } else if (thisID == 1) {//视频激励\r\n                return Global.openAdTimes > 0;\r\n            } else if (thisID == 2) {//等级激活\r\n                let needlvl = confArry[1];\r\n                if (Global.level < needlvl) {\r\n                    return false;\r\n                } else {\r\n                    return true;\r\n                }\r\n\r\n            } else if (thisID == 3) {//邀请好友\r\n                if (Global.inviteFriends < confArry[1])\r\n                    return false;\r\n                else\r\n                    return true;\r\n            }\r\n        }\r\n        return true;\r\n\r\n    },\r\n    addAdTime: function (id) {\r\n        let conf = ToolConfig[id];\r\n        let thisID;\r\n        let confArry;\r\n        if (\"unlock\" in conf) {\r\n            if (conf.unlock.indexOf(\";\") != -1) {\r\n                confArry = conf.unlock.split(\";\");\r\n                thisID = confArry[0];\r\n            } else {\r\n                thisID = parseInt(conf.unlock);\r\n            }\r\n            if (thisID == 1) {//视频激励\r\n                return Global.openAdTimes++;\r\n            } else if (thisID == 3) {//邀请好友\r\n                Global.inviteFriends++;\r\n            }\r\n        }\r\n    },\r\n    addItems: function () {\r\n\r\n        let hard = Global.hard;\r\n        let boxID = StageConfig[hard].box;\r\n        let rewardID = BoxConfig[boxID].reward;\r\n        let conf = RewardConfig[rewardID];\r\n        let num = conf.num;\r\n        let itemdata = {};\r\n        let totoal = 0;\r\n        let reward = {};\r\n        let max = 0;\r\n        for (let i = 1; i < 7; i++) {\r\n            if (conf['rate' + i] != 0) {\r\n                totoal = conf['rate' + i];\r\n                if (i == 1) {\r\n                    itemdata[i] = totoal;\r\n                    max = itemdata[i];\r\n                } else {\r\n                    itemdata[i] = itemdata[i - 1] + totoal;\r\n                    max = itemdata[i];\r\n                }\r\n            }\r\n        }\r\n        for (let j = 1; j <= num; j++) {\r\n            let random = GameUtils.random(max);\r\n            for (let z = 1; itemdata[z] != undefined; z++) {\r\n                if (itemdata[z] < random) {\r\n                    continue;\r\n                }\r\n                reward[j] = conf['item' + z];\r\n                break;\r\n            }\r\n        }\r\n        let gold = 0;\r\n        let gem = 0;\r\n        let str = \"\";\r\n        for (let i = 1; i <= num; i++) {\r\n            if (reward[i] != undefined) {\r\n                str += reward[i] + \"--\";\r\n                if (reward[i].indexOf(\";\") != -1) {\r\n                    let rewardarry = reward[i].split(\";\");\r\n                    if (rewardarry[0] == 1001) {\r\n                        gold += parseInt(rewardarry[1]);\r\n                    } else if (rewardarry[0] == 1002) {\r\n                        gem += parseInt(rewardarry[1]);\r\n                    }\r\n                }\r\n            }\r\n            this.createRewardItem(reward[i], i);\r\n            this.openbox.active = true;\r\n        }\r\n        if (gold > 0 || gem > 0) {\r\n            let golds = Global.gold + gold;\r\n            let gems = Global.gem + gem;\r\n            this.GameMenuController.updateDate({gold: golds, gem: gems});\r\n            Global.saveGold(golds);\r\n            Global.saveGem(gems);\r\n        }\r\n\r\n    },\r\n    initTreasure: function () {\r\n        let BoxID = StageConfig[Global.hard].box;\r\n        let BoxConf = BoxConfig[BoxID];\r\n        this.treasure.normalSprite = SpriteFrameCenter.getFrameFromAtlas(\"png/box\", BoxConf.icon + \".png\");\r\n        this.treasure.pressedSprite = SpriteFrameCenter.getFrameFromAtlas(\"png/box\", BoxConf.icon + \".png\");\r\n        this.treasure.hoverSprite = SpriteFrameCenter.getFrameFromAtlas(\"png/box\", BoxConf.icon + \".png\");\r\n        this.treasure.disabledSprite = SpriteFrameCenter.getFrameFromAtlas(\"png/box\", BoxConf.icon + \".png\");\r\n        let animation = BoxConf.animation;\r\n        SkeletonDataCenter.addSkeletonDataWait(animation, this.boxSpine);\r\n        this.treasure.node.y = -GameHeight / 2 + this.blockWidth + 35 - 20;\r\n        this.boxSpine.node.y = -GameHeight / 2 + this.blockWidth + 35 - 20;\r\n\r\n    },\r\n    createRewardItem: function (reward, i) {\r\n        if (this.rewardItem[i]) {\r\n            this.rewardItem[i].destroy();\r\n            this.rewardItem[i] = null;\r\n        }\r\n        let start = -400 + i * 200;\r\n\r\n        let node = RewardItemFactory.create(reward);\r\n        let location = this.treasure.node.position;\r\n        this.rewardItem[i] = (node);\r\n        node.position = location;\r\n        let action = cc.moveTo(0.5, cc.p(start, 10));\r\n        let action2 = cc.callFunc(() => {\r\n            node.getComponent(\"RewardItem\").setFinish();\r\n            this.canTouch = true;\r\n        }, this);\r\n        // node.runAction(cc. moveTo(0.5,cc.p(start,-20)));\r\n        this.openbox.addChild(node);\r\n        node.runAction(cc.sequence(action, action2));\r\n    },\r\n    efficiencyAdd: function (id) {\r\n        let conf = EfficiencyConfig[id];\r\n        let gem = 0;\r\n        if (conf.costtype == 1002) {\r\n            if (Global.gem >= conf.cost) {\r\n                gem = Global.gem - conf.cost;\r\n                if (conf.coin > 0) {\r\n                    Global.efficiency[id] = {'id': id, 'coin': conf.coin};\r\n                    this.efficeGold += conf.coin - 1;\r\n                }\r\n                if (conf.jumptime > 0) {\r\n\r\n                }\r\n\r\n            }\r\n            else {\r\n            }\r\n        }\r\n        this.GameMenuController.updateDate({'gem': gem});\r\n        Global.saveGem(gem);\r\n        Global.saveEfficiency(Global.efficiency);\r\n        this.GameMenuController.updateButtom();\r\n    },\r\n    onClickBtnaddGem() {\r\n\r\n        let gem = Global.gem + 10;\r\n        this.GameMenuController.updateDate({'gem': gem});\r\n        Global.saveGem(gem);\r\n        this.GameMenuController.updateButtom();\r\n    },\r\n    onClickBtnaddGold() {\r\n\r\n        let gold = Global.gold + 10;\r\n        this.GameMenuController.updateDate({'gold': gold});\r\n        Global.saveGold(gold);\r\n        this.GameMenuController.updateButtom();\r\n    },\r\n    onClickBtnsubGem() {\r\n\r\n        let gem = Global.gem - 10 > 0 ? Global.gem - 10 : 0;\r\n        this.GameMenuController.updateDate({'gem': gem});\r\n        Global.saveGem(gem);\r\n        this.GameMenuController.updateButtom();\r\n    },\r\n    onClickBtnsubGold() {\r\n\r\n        let gold = Global.gold - 10 > 0 ? Global.gold - 10 : 0;\r\n        this.GameMenuController.updateDate({'gold': gold});\r\n        Global.saveGold(gold);\r\n        this.GameMenuController.updateButtom();\r\n    }\r\n});\r\n//"]}