{"version":3,"sources":["../../../../../assets/src/view/assets/src/view/TouchView.js"],"names":["cc","Class","extends","Component","properties","touchStartCallBack","default","visible","touchEndCallBack","touchCancelCallBack","touchMoveCallBack","onLoad","node","on","Node","EventType","TOUCH_START","touchEvent","TOUCH_MOVE","TOUCH_CANCEL","TOUCH_END","touchRect","rect","width","height","eventMap","event","location","getLocation","locationInNode","currentTarget","convertToNodeSpace","rectContainsPoint","callback","type","locationInNode1","convertToWorldSpace"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;;AAELC,aAASF,GAAGG,SAFP;AAGLC,gBAAY;AACRC,4BAAoB;AAChBC,qBAAQ,IADQ;AAEhBC,qBAAQ;AAFQ,SADZ;AAKRC,0BAAmB;AACfF,qBAAQ,IADO;AAEfC,qBAAQ;AAFO,SALX;AASRE,6BAAoB;AAChBH,qBAAQ,IADQ;AAEhBC,qBAAQ;AAFQ,SATZ;AAaRG,2BAAmB;AACfJ,qBAAQ,IADO;AAEfC,qBAAQ;AAFO;AAbX,KAHP;;AAsBLI,YAAQ,kBAAY;;AAGhB,aAAKC,IAAL,CAAUC,EAAV,CAAab,GAAGc,IAAH,CAAQC,SAAR,CAAkBC,WAA/B,EAA4C,KAAKC,UAAjD,EAA6D,IAA7D;AACA,aAAKL,IAAL,CAAUC,EAAV,CAAab,GAAGc,IAAH,CAAQC,SAAR,CAAkBG,UAA/B,EAA2C,KAAKD,UAAhD,EAA4D,IAA5D;AACA,aAAKL,IAAL,CAAUC,EAAV,CAAab,GAAGc,IAAH,CAAQC,SAAR,CAAkBI,YAA/B,EAA6C,KAAKF,UAAlD,EAA8D,IAA9D;AACA,aAAKL,IAAL,CAAUC,EAAV,CAAab,GAAGc,IAAH,CAAQC,SAAR,CAAkBK,SAA/B,EAA0C,KAAKH,UAA/C,EAA2D,IAA3D;;AAEA,aAAKI,SAAL,GAAiBrB,GAAGsB,IAAH,CAAQ,CAAR,EAAW,CAAX,EAAc,KAAKV,IAAL,CAAUW,KAAxB,EAA+B,KAAKX,IAAL,CAAUY,MAAzC,CAAjB;AACA;;AAEA,aAAKC,QAAL,GAAgB,EAAhB;AACA,aAAKA,QAAL,CAAczB,GAAGc,IAAH,CAAQC,SAAR,CAAkBC,WAAhC,IAA+C,KAAKX,kBAApD;AACA,aAAKoB,QAAL,CAAczB,GAAGc,IAAH,CAAQC,SAAR,CAAkBK,SAAhC,IAA6C,KAAKZ,gBAAlD;AACA,aAAKiB,QAAL,CAAczB,GAAGc,IAAH,CAAQC,SAAR,CAAkBG,UAAhC,IAA8C,KAAKR,iBAAnD;AACA,aAAKe,QAAL,CAAczB,GAAGc,IAAH,CAAQC,SAAR,CAAkBI,YAAhC,IAAgD,KAAKV,mBAArD;AAEH,KAvCI;;AAyCLQ,gBAAY,oBAAUS,KAAV,EAAiB;AACzB,YAAIC,WAAWD,MAAME,WAAN,EAAf;AACA;;AAEA;AACA;AACA,YAAIC,iBAAiBH,MAAMI,aAAN,CAAoBC,kBAApB,CAAuCL,MAAME,WAAN,EAAvC,CAArB;AACA;;AAEA,YAAI5B,GAAGgC,iBAAH,CAAqB,KAAKX,SAA1B,EAAqCQ,cAArC,CAAJ,EAA0D;AACtD,gBAAII,WAAW,KAAKR,QAAL,CAAcC,MAAMQ,IAApB,CAAf;AACA,gBAAID,QAAJ,EAAc;AACV,oBAAIE,kBAAkBT,MAAMI,aAAN,CAAoBM,mBAApB,CAAwCP,cAAxC,CAAtB;AACAI,yBAASE,eAAT;AACH;AACD;AACH,SAPD,MAOM;AACF;AACH;AACJ;;AA5DI,CAAT","file":"TouchView.js","sourceRoot":"../../../../../assets/src/view","sourcesContent":["cc.Class({\n\n    extends: cc.Component,\n    properties: {\n        touchStartCallBack: {\n            default:null,\n            visible:false\n        },\n        touchEndCallBack:  {\n            default:null,\n            visible:false\n        },\n        touchCancelCallBack:{\n            default:null,\n            visible:false\n        },\n        touchMoveCallBack: {\n            default:null,\n            visible:false\n        }\n    },\n\n    onLoad: function () {\n\n\n        this.node.on(cc.Node.EventType.TOUCH_START, this.touchEvent, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchEvent, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEvent, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.touchEvent, this);\n\n        this.touchRect = cc.rect(0, 0, this.node.width, this.node.height);\n        // cc.log(\"touchRect:\", this.touchRect.width, this.touchRect.height);\n\n        this.eventMap = {};\n        this.eventMap[cc.Node.EventType.TOUCH_START] = this.touchStartCallBack;\n        this.eventMap[cc.Node.EventType.TOUCH_END] = this.touchEndCallBack;\n        this.eventMap[cc.Node.EventType.TOUCH_MOVE] = this.touchMoveCallBack;\n        this.eventMap[cc.Node.EventType.TOUCH_CANCEL] = this.touchCancelCallBack;\n\n    },\n\n    touchEvent: function (event) {\n        let location = event.getLocation();\n        // cc.log(event.type, event.type == cc.Node.EventType.TOUCH_END, event.eventPhase, location.x, location.y, event.getID());\n\n        //相对于锚点的位置。\n        // let locationInNode = event.currentTarget.convertToNodeSpaceAR(event.getLocation());\n        let locationInNode = event.currentTarget.convertToNodeSpace(event.getLocation());\n        // cc.log(\"locationInNode\", locationInNode.x, locationInNode.y);\n\n        if (cc.rectContainsPoint(this.touchRect, locationInNode)) {\n            let callback = this.eventMap[event.type];\n            if (callback) {\n                let locationInNode1 = event.currentTarget.convertToWorldSpace(locationInNode);\n                callback(locationInNode1);\n            }\n            // cc.log(\" touch in\");\n        }else {\n            // cc.log(\" touch out\");\n        }\n    },\n\n})\n;"]}