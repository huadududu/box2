{"version":3,"sources":["GameMenuController.js"],"names":["GameMenuView","require","UIBottomFactory","AcceleratorConfig","ToolConfig","EfficiencyConfig","LevelConfig","ParticleSystemCenter","SkeletonDataCenter","Global","cc","Class","extends","Component","properties","node","Node","bottomlist","scrollView","ScrollView","level","Label","gold","gem","TopProgressBar","ProgressBar","radioButton","default","type","Toggle","thisCheck","visible","BoxController","onLoad","config","itemList","addUIBottom","undefined","startpos","width","i","length","j","create","eventcallback","bind","position","p","addChild","push","initInfo","setGoldNum","setLevel","setGem","hard","exp","setProgress","num","string","value","pro","progress","changeHammerSpine","data","updateDate","name","scrollEvent","sender","event","thispos","getScrollOffset","num1","num2","x","setCheckToggle","radioButtonClicked","toggle","index","indexOf","scrollToOffset","isChecked","onClickLevel","addlevel","myinfo","needexp","needgold","rewardcoin","saveLevel","saveExp","saveGold","id"],"mappings":"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","file":"GameMenuController.js","sourceRoot":"../../../../../assets/src/controller","sourcesContent":["/*\n * Created by Ren on 2018/6/6.\n */\nlet GameMenuView = require('GameMenuView');\nlet UIBottomFactory = require(\"UIBottomFactory\");\nlet AcceleratorConfig = require(\"AcceleratorConfig\");\nlet ToolConfig = require(\"ToolConfig\");\nlet EfficiencyConfig = require(\"EfficiencyConfig\");\nlet LevelConfig = require(\"LevelConfig\");\nlet ParticleSystemCenter = require(\"ParticleSystemCenter\");\nlet SkeletonDataCenter = require(\"SkeletonDataCenter\");\nlet Global = require('Global');\n\ncc.Class({\n    extends:cc.Component,\n    properties:{\n        node:cc.Node,\n        bottomlist:cc.Node,\n        scrollView: cc.ScrollView,\n        level: cc.Label,\n        gold:cc.Label,\n        gem:cc.Label,\n        TopProgressBar:cc.ProgressBar,\n        radioButton:{\n            default:[],\n            type:cc.Toggle\n        },\n\n        thisCheck:{\n            visible:false,\n            default:0\n        },\n\n        BoxController: require(\"BoxController\")\n\n    },\n    onLoad:function(){\n\n        this.config=[AcceleratorConfig,ToolConfig,EfficiencyConfig];\n        this.itemList=[];\n\n\n    },\n    addUIBottom:function(){\n        if(this.config == undefined)\n        {\n            this.config=[AcceleratorConfig,ToolConfig,EfficiencyConfig];\n        }\n        this.itemList=[];\n        let startpos = -this.bottomlist.width/2;\n        for(var i = 0;i < this.config.length;i++){\n            for(var j = 1; this.config[i][j] != undefined;j++){\n                let node = UIBottomFactory.create(i,this.config[i][j],this.eventcallback.bind(this));\n                node.position = cc.p(startpos+75,0);\n                this.bottomlist.addChild(node);\n                this.itemList.push(node);\n                startpos+=156;\n            }\n        }\n    },\n    initInfo:function() {\n        this.setGoldNum(Global.gold);\n        this.setLevel(Global.level);\n        this.setGem(Global.gem);\n        let hard = Global.hard;\n\n        let exp = LevelConfig[Global.level].exp;\n        this.setProgress(Global.exp/exp);\n\n    },\n    //设置金币\n    setGoldNum: function (num) {\n        this.gold.string = num;\n    },\n    setLevel: function (level) {\n        this.level.string = \"level:\"+level;\n    },\n    setGem: function (value){\n        this.gem.string = value;\n    },\n    setProgress: function (value){\n        let pro = this.TopProgressBar.progress;\n        if (pro  == 1.0 && value ==1)\n            return;\n        this.TopProgressBar.progress = value;\n    },\n\n    changeHammerSpine:function(data){\n        this.BoxController.changeHammerSpine(data);\n    },\n    updateDate:function (data){\n        for( var name in data) {\n            if (name == 'exp') {\n                let exp = LevelConfig[Global.level].exp;\n                let pro = data.exp / exp;\n                if (pro > 1)\n                    pro = 1;\n\n                this.setProgress(pro);\n            }\n            if (name == \"level\") {\n\n                this.setLevel(data.level);\n            }\n            if (name == \"gold\") {\n                this.setGoldNum(data.gold);\n            }\n        }\n    },\n    scrollEvent: function(sender, event) {\n        let thispos= sender.getScrollOffset();\n        // switch(event) {\n        //     case 2: //left\n        //        // this.lblScrollEvent.string = \"Scroll to Left\";\n        //        break;\n        //     case 3: ////right\n        //        // this.lblScrollEvent.string = \"Scroll to Right\"; \n        //        break;\n        //    }\n        let num1= 2*156;\n        let num2 = 3*156;\n        if(-thispos.x <num1){\n            this.setCheckToggle(0);\n        }else if(-thispos.x < num2){\n            this.setCheckToggle(1);\n\n        }else{\n            this.setCheckToggle(2);\n        }\n    },\n\n    radioButtonClicked: function(toggle) {\n        var index = this.radioButton.indexOf(toggle);\n        // var title = \"RadioButton\";\n        switch(index) {\n            case 0:\n                // title += \"1\";\n                this.scrollView.scrollToOffset(cc.p(0 , 0), 0.2);\n                break;\n            case 1:\n                let num1= 2*156;\n                this.scrollView.scrollToOffset(cc.p( num1, 0), 0.2);\n                // title += \"2\";\n                break;\n            case 2:\n                let num2= 4*156;\n                this.scrollView.scrollToOffset(cc.p( num2, 0), 0.2);\n                // title += \"3\";\n                break;\n            default:\n                break;\n        }\n    },\n\n    setCheckToggle: function(num) {\n        if( this.thisCheck == num )\n            return;\n        this.thisCheck= num;\n        for( let i=0;i < this.radioButton.length;i++)\n        {\n            if(i == num){\n                this.radioButton[i].isChecked = true;\n            }\n            else{\n                this.radioButton[i].isChecked = false;\n            }\n        }\n    },\n\n\n    //点击升级按钮\n    onClickLevel:function(){\n        if(this.TopProgressBar.progress >=1){\n            this.addlevel();\n        }\n    },\n    addlevel:function(){\n        let myinfo ={};\n        let level =Global.level+1;\n        let needexp = LevelConfig[ level].exp;\n        let needgold = LevelConfig[ level].rewardcoin;\n        myinfo.level = level;\n        Global.saveLevel( level);\n        myinfo.exp =Global.exp-needexp;\n        Global.saveExp( myinfo.exp);\n        myinfo.gold = Global.gold-needgold;\n        Global.saveGold(myinfo.gold);\n        this.updateDate(myinfo);\n\n    },\n    eventcallback: function(type, id) {\n        // let node= this.itemList.indexOf(sender);\n       this.BoxController.eventcallback(type,id);\n    },\n});"]}