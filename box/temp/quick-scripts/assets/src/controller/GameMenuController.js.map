{"version":3,"sources":["GameMenuController.js"],"names":["GameMenuView","require","UIBottomFactory","AcceleratorConfig","ToolConfig","EfficiencyConfig","LevelConfig","ParticleSystemCenter","SkeletonDataCenter","cc","Class","extends","Component","properties","node","Node","bottomlist","scrollView","ScrollView","level","Label","gold","gem","TopProgressBar","ProgressBar","radioButton","default","type","Toggle","thisCheck","visible","BoxController","onLoad","find","getComponent","config","itemList","myinfo","undefined","addUIBottom","startpos","width","i","length","j","create","eventcallback","bind","position","p","addChild","push","initInfo","info","setGoldNum","setLevel","setGem","hard","exp","setProgress","getPositionInView","item","worldPos","parent","convertToWorldSpaceAR","viewPos","convertToNodeSpaceAR","num","string","value","pro","progress","toolChange","id","animation","hammer","addSkeletonData","changeHammerSpine","data","updateDate","name","scrollEvent","sender","event","thispos","getScrollOffset","num1","num2","x","setCheckToggle","radioButtonClicked","toggle","index","indexOf","scrollToOffset","isChecked","onClickLevel"],"mappings":"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","file":"GameMenuController.js","sourceRoot":"../../../../../assets/src/controller","sourcesContent":["/*\n * Created by Ren on 2018/6/6.\n */\nlet GameMenuView = require('GameMenuView');\nlet UIBottomFactory = require(\"UIBottomFactory\");\nlet AcceleratorConfig = require(\"AcceleratorConfig\");\nlet ToolConfig = require(\"ToolConfig\");\nlet EfficiencyConfig = require(\"EfficiencyConfig\");\nlet LevelConfig = require(\"LevelConfig\");\nlet ParticleSystemCenter = require(\"ParticleSystemCenter\");\nlet SkeletonDataCenter = require(\"SkeletonDataCenter\");\n\ncc.Class({\n    extends:cc.Component,\n    properties:{\n        node:cc.Node,\n        bottomlist:cc.Node,\n        scrollView: cc.ScrollView,\n        level: cc.Label,\n        gold:cc.Label,\n        gem:cc.Label,\n        TopProgressBar:cc.ProgressBar,\n        radioButton:{\n            default:[],\n            type:cc.Toggle\n        },\n\n        thisCheck:{\n            visible:false,\n            default:0\n        },\n\n        BoxController:{\n            default:null,\n            visible:false\n        },\n\n    },\n    onLoad:function(){\n        this.BoxController = cc.find(\"Canvas\").getComponent(\"BoxController\");\n\n        this.config=[AcceleratorConfig,ToolConfig,EfficiencyConfig];\n        this.itemList=[];\n        if(this.myinfo == null || this.myinfo  == undefined) {\n            this.myinfo = null;\n        }\n\n\n    },\n    addUIBottom:function(){\n        if(this.config == undefined)\n        {\n            this.onLoad();\n        }\n        this.itemList=[];\n        let startpos = -this.bottomlist.width/2;\n        for(var i = 0;i < this.config.length;i++){\n            for(var j = 1; this.config[i][j] != undefined;j++){\n                let node = UIBottomFactory.create(i,this.config[i][j],\"English\",this.eventcallback.bind(this));\n                node.position = cc.p(startpos+75,0);\n                this.bottomlist.addChild(node);\n                this.itemList.push(node);\n                startpos+=156;\n            }\n        }\n    },\n    initInfo:function(info) {\n        this.myinfo = info;\n        this.setGoldNum(info.gold);\n        this.setLevel(info.level);\n        this.setGem(info.gem);\n        let hard = info.hard;\n\n        let exp = LevelConfig[info.hard].exp;\n\n        this.setProgress(info.exp/exp);\n        // this.ToggleContainer(info.gold);\n\n    },\n    getPositionInView: function (item) { // get item position in scrollview's node space\n        let worldPos = item.parent.convertToWorldSpaceAR(item.position);\n        let viewPos = this.scrollView.node.convertToNodeSpaceAR(worldPos);\n        return viewPos;\n    },\n    //设置金币\n    setGoldNum: function (num) {\n        this.gold.string = num;\n    },\n    setLevel: function (level) {\n        this.level.string = \"level:\"+level;\n    },\n    setGem: function (value){\n        this.gem.string = value;\n    },\n    setProgress: function (value){\n        let pro = this.TopProgressBar.progress;\n        if (pro  == 1.0 && value ==1)\n            return;\n        this.TopProgressBar.progress = value;\n    },\n    toolChange:function(id) {\n        let info = ToolConfig[id];\n        let animation = info.animation;\n         // this.BoxController.changeHammerSpine(animation);\n        let node = this.BoxController.hammer;\n        SkeletonDataCenter.addSkeletonData(animation,node);\n    },\n    changeHammerSpine:function(data){\n         this.BoxController.changeHammerSpine(data);\n    },\n    updateDate:function (data){\n        for( var name in data){\n            if(name =='exp'){\n                let exp = LevelConfig[this.myinfo.hard].exp;\n                let pro = data.exp/exp;\n                if(pro >1)\n                    pro = 1;\n\n                this.setProgress(pro);\n            }\n            if(name == \"level\"){\n\n                this.setLevel(data.level);\n\n            }\n        }\n    },\n    scrollEvent: function(sender, event) {\n        let thispos= sender.getScrollOffset();\n        // switch(event) {\n        //     case 2: //left\n        //        // this.lblScrollEvent.string = \"Scroll to Left\";\n        //        break;\n        //     case 3: ////right\n        //        // this.lblScrollEvent.string = \"Scroll to Right\"; \n        //        break;\n        //    }\n        let num1= 2*156;\n        let num2 = 3*156;\n        if(-thispos.x <num1){\n            this.setCheckToggle(0);\n        }else if(-thispos.x < num2){\n            this.setCheckToggle(1);\n\n        }else{\n            this.setCheckToggle(2);\n        }\n    },\n\n    radioButtonClicked: function(toggle) {\n        var index = this.radioButton.indexOf(toggle);\n        // var title = \"RadioButton\";\n        switch(index) {\n            case 0:\n                // title += \"1\";\n                this.scrollView.scrollToOffset(cc.p(0 , 0), 0.2);\n                break;\n            case 1:\n                let num1= 2*156;\n                this.scrollView.scrollToOffset(cc.p( num1, 0), 0.2);\n                // title += \"2\";\n                break;\n            case 2:\n                let num2= 4*156;\n                this.scrollView.scrollToOffset(cc.p( num2, 0), 0.2);\n                // title += \"3\";\n                break;\n            default:\n                break;\n        }\n    },\n\n    setCheckToggle: function(num) {\n        if( this.thisCheck == num )\n            return;\n        this.thisCheck= num;\n        for( let i=0;i < this.radioButton.length;i++)\n        {\n            if(i == num){\n                this.radioButton[i].isChecked = true;\n            }\n            else{\n                this.radioButton[i].isChecked = false;\n            }\n        }\n    },\n    eventcallback: function(type, id) {\n        // let node= this.itemList.indexOf(sender);\n        switch (type) {\n            case 0:\n                break;\n            case 1:\n                // let info = ToolConfig[id];\n                // let animation = info.animation;\n                // // BoxController.changeHammerSpine(animation);\n                // SkeletonDataCenter.addSkeletonData(animation, BoxController.changeHammerSpine);\n                this.toolChange(id);\n                break;\n            case 2:\n                break;\n        }\n    },\n\n    //点击升级按钮\n    onClickLevel:function(){\n        if(this.TopProgressBar.progress >=1){\n            this.myinfo.level+=1;\n\n        }\n\n    },\n\n});"]}