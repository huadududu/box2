{"version":3,"sources":["InitialScript.js"],"names":["require","GameConfig","BingLog","Global","GameUtils","SpriteFrameCenter","cc","Class","extends","Component","properties","progress","Label","bgsp","Node","onLoad","log","printBaseInfo","director","getScene","name","randoms","index","randomInt","initHistory","DataCenter","requestFriends","requestWorld","getPlayerLeaderboard","start","preloadFiles","push","type","files","i","length","self","preloadCount","loadedCount","loadRes","inited","preloadFile","loader","err","result","warn","message","updateProgress","loadResDir","errs","assets","console","red","green","blue","setColor","color","goMenu","preLoadAtlas","loadScene","update","dt","sys","platform","isNative","os","osVersion","browserType","uaResult","language","windowPixelResolution","jsb","fileUtils","getWritablePath"],"mappings":"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","file":"InitialScript.js","sourceRoot":"../../../../../assets/src/controller","sourcesContent":["//class InitialScript\nrequire('JSExtends');\nvar GameConfig = require(\"GameConfig\");\nlet BingLog = require(\"BingLog\");\nlet Global  = require(\"Global\");\nlet GameUtils = require(\"GameUtils\");\nlet SpriteFrameCenter = require(\"SpriteFrameCenter\");\n\ncc.Class({\n    extends: cc.Component,\n    properties:{\n        progress:cc.Label,\n        bgsp:cc.Node\n    },\n\n    onLoad: function () {\n\n        cc.log(\"InitialScript onLoad \");\n\n\n        // cc.sys.localStorage.clear();\n        this.printBaseInfo();\n        BingLog.log(\"Init Script----------\\n\\n\");\n        BingLog.log(\"InitialScript sc name: \", cc.director.getScene().name);\n\n        let randoms = [1,3,6,9];\n        let index = GameUtils.randomInt(0,3);\n         Global.initHistory();\n        // Global.syncInviteFriends();\n        // Global.tankid  = randoms[index].toString();\n\n        // request data\n        let DataCenter = require(\"DataCenter\");\n        DataCenter.requestFriends(null);\n        DataCenter.requestWorld(null);\n        DataCenter.getPlayerLeaderboard(null);\n\n    },\n\n    start: function () {\n\n        cc.log(\"InitialScript start \");\n        BingLog.log(\"scene name:\", cc.director.getScene().name);\n\n        //add all resource here.\n        let preloadFiles = [];\n        // preloadFiles.push({ name:\"prefab/HintController\",type:\"file\"});\n        preloadFiles.push({ name:\"fonts\",type:\"dir\"});\n        preloadFiles.push({ name:\"particle\",type:\"dir\"});\n         // preloadFiles.push({ name:\"png/share\",type:\"dir\"});\n        preloadFiles.push({ name:\"prefab\",type:\"dir\"});\n\n\n        let files = [\n            // \"prefab/bar\",\n            \"png/box\",\n            \"prefab/blockbig\",\n            \"prefab/blocksmall\",\n            \"prefab/blockbig\",\n            \"prefab/popmsg\"\n\n\n        ];\n\n        for(let i = 0; i <files.length;++i ){\n            preloadFiles.push({ name:files[i],type:\"file\"});\n        }\n\n\n        let self = this;\n        this.preloadCount = preloadFiles.length;\n        this.loadedCount = 0;\n        BingLog.log(\"preload:\",this.loadedCount,this.preloadCount);\n        this.loadRes = false;\n        this.inited = false;\n\n        for (let i = 0; i < preloadFiles.length; ++i) {\n            let preloadFile  = preloadFiles[i];\n            BingLog.log(\"will load file:\",preloadFile.name);\n            if(preloadFile.type === \"file\"){\n                cc.loader.loadRes(preloadFile.name, function (err, result) {\n                    if(err){\n                        BingLog.warn(\"load file err:\",err.message);\n                    }\n                    self.loadedCount++;\n                    BingLog.log(\"loading:\",self.loadedCount,self.loadedCount*100.0/self.preloadCount);\n\n                    // let base = self.node.getComponent(Welcome).Stage1Percent;\n                    // BingLog.log(\"percent:\",base+self.loadedCount* (100-base)/self.preloadCount);\n                    // self.node.getComponent(Welcome).updateUIProgress(base+self.loadedCount* (100-base)/self.preloadCount,0.5);\n                    if(self.loadedCount == self.preloadCount){\n                        self.loadRes = true;\n                    }\n                    self.updateProgress();\n                });\n            }else if(preloadFile.type === \"dir\"){\n                //Music\n                cc.loader.loadResDir(preloadFile.name, function (errs, assets) {\n                    if(errs){\n                        BingLog.warn(\"load file err:\",errs.message);\n                    }\n                    self.loadedCount++;\n                    BingLog.log(\"assets:\",assets);\n                    BingLog.log(\"loading:\",self.loadedCount,self.loadedCount*100.0/self.preloadCount);\n                    // let base = self.node.getComponent(Welcome).Stage1Percent;\n                    // BingLog.log(\"percent:\",base+self.loadedCount* (100-base)/self.preloadCount);\n                    // self.node.getComponent(Welcome).updateUIProgress(base+self.loadedCount* (100-base)/self.preloadCount,0.5);\n                    if(self.loadedCount == self.preloadCount){\n                        self.loadRes = true;\n                    }\n                    self.updateProgress();\n                });\n            }\n        }\n    },\n\n    updateProgress:function () {\n\n        let progress = this.loadedCount*100.0/this.preloadCount;\n        if(progress >100)\n        {\n            progress = 100;\n        }\n        // this.progress.string = progress.toFixed(0).toString() + \"%\";\n\n        console.log(\"progress\",progress);\n        let red= 90+18* progress/100;\n        let green = 180+ 11* progress/100;\n        let blue= 220 + 19 * progress/100;\n        this.bgsp.setColor(cc.color(red,green,blue));\n\n    },\n\n    goMenu:function () {\n\n        SpriteFrameCenter.preLoadAtlas(\"png/box\",function () {\n            cc.director.loadScene(\"boxa\");\n        });\n\n        // cc.director.loadScene(\"gametest\");\n\n        // cc.director.loadScene(\"test\");\n    },\n\n    update:function (dt) {\n        if(this.loadRes&& !this.inited){\n            this.loadRes = false;\n            this.inited = true;\n            this.goMenu();\n        }\n    },\n\n    printBaseInfo: function () {\n\n        BingLog.log(\"********   info   ********\");\n        BingLog.log(\"platform: \", cc.sys.platform);\n        BingLog.log(\"isNative: \", cc.sys.isNative);\n        BingLog.log(\"os: \", cc.sys.os);\n        BingLog.log(\"osVersion: \", cc.sys.osVersion);\n        BingLog.log(\"browserType: \", cc.sys.browserType);\n        BingLog.log(\"UA: \", cc.sys.uaResult);\n        BingLog.log(\"language: \", cc.sys.language);\n        BingLog.log(\"windowPixelResolution: \", cc.sys.windowPixelResolution);\n        if (cc.sys.isNative) {\n            BingLog.log(\"windowPixelResolution: \", jsb.fileUtils.getWritablePath());\n        }\n        BingLog.log(\"******** end info ********\");\n\n        // cc.sys.localStorage.setItem(\"TotalSpinsHourBonus\", 1001);\n        // MurkaCore.Instance.BaseGameConfig.GameInited = \"1234\";\n    }\n});\n"]}