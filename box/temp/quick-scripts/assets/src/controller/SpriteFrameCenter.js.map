{"version":3,"sources":["SpriteFrameCenter.js"],"names":["SC","cc","Class","extends","Object","properties","ctor","spDic","atlas","getFrameByName","fileName","spFrame","realUrl","url","raw","texture","textureCache","addImage","SpriteFrame","preLoadAtlas","callBack","self","loader","loadRes","SpriteAtlas","err","console","log","getFrameFromAtlas","frameNameIn","frameName","split","frame","getSpriteFrame","bind","Center","module","exports"],"mappings":";;;;;;AAAA;;;;AAMA,IAAIA,KAAIC,GAAGC,KAAH,CAAS;AACbC,aAAQF,GAAGG,MADE;;AAGbC,gBAAW,EAHE;;AAObC,UAAK,gBAAY;;AAEb,aAAKC,KAAL,GAAa,EAAb;AACA,aAAKC,KAAL,GAAa,EAAb;AACH,KAXY;;AAab;AACAC,oBAAe,wBAAUC,QAAV,EAAoB;;AAE/B,YAAIC,UAAU,KAAKJ,KAAL,CAAWG,QAAX,CAAd;AACA,YAAG,CAACC,OAAJ,EAAY;AACR,gBAAIC,UAAUX,GAAGY,GAAH,CAAOC,GAAP,CAAWJ,QAAX,CAAd;AACA,gBAAIK,UAAUd,GAAGe,YAAH,CAAgBC,QAAhB,CAAyBL,OAAzB,CAAd;AACAD,sBAAU,IAAIV,GAAGiB,WAAP,CAAmBH,OAAnB,CAAV;AACA,iBAAKR,KAAL,CAAWG,QAAX,IAAuBC,OAAvB;AACH;AACD,eAAOA,OAAP;AACH,KAxBY;;AA4BbQ,kBAAa,sBAAUT,QAAV,EAAmBU,QAAnB,EAA6B;;AAEtC,YAAIC,OAAO,IAAX;AACApB,WAAGqB,MAAH,CAAUC,OAAV,CAAkBb,QAAlB,EAA4BT,GAAGuB,WAA/B,EAA4C,UAAUC,GAAV,EAAejB,KAAf,EAAsB;AAC9D,gBAAGiB,GAAH,EAAO;AACHC,wBAAQC,GAAR,CAAY,iCAAiCjB,QAA7C;AACH,aAFD,MAEK;AACDgB,wBAAQC,GAAR,CAAY,wBAAwBjB,QAApC;AACAW,qBAAKb,KAAL,CAAWE,QAAX,IAAuBF,KAAvB;AACA,oBAAGY,QAAH,EAAY;AACRA;AACH;AACJ;AACJ,SAVD;AAWH,KA1CY;;AA6Cb;AACAQ,uBAAkB,2BAAUlB,QAAV,EAAmBmB,WAAnB,EAAgC;AAC9C,YAAG,CAACA,WAAJ,EAAgB;AACZH,oBAAQC,GAAR,CAAY,0BAAZ,EAAuCE,WAAvC;AACA,mBAAO,IAAP;AACH;;AAED,YAAIC,YAAaD,YAAYE,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAjB;AACA,YAAIvB,QAAQ,KAAKA,KAAL,CAAWE,QAAX,CAAZ;AACA,YAAIsB,QAAQ,IAAZ;AACA,YAAGxB,KAAH,EAAS;AACLwB,oBAAQxB,MAAMyB,cAAN,CAAqBH,SAArB,CAAR;AACH,SAFD,MAEK;AACD,iBAAKX,YAAL,CAAkBT,QAAlB,EAA2B,KAAKkB,iBAAL,CAAuBM,IAAvB,CAA4B,IAA5B,EAAiCxB,QAAjC,EAA0CoB,SAA1C,CAA3B;AACH;AACD,eAAOE,KAAP;AACH;;AA7DY,CAAT,CAAR;;AAoEA,IAAIG,SAAS,IAAInC,EAAJ,EAAb;AACAoC,OAAOC,OAAP,GAAiBF,MAAjB","file":"SpriteFrameCenter.js","sourceRoot":"../../../../../assets/src/controller","sourcesContent":["/**\n * Created by bing on 09/05/2018.\n */\n\n\n\nlet SC= cc.Class({\n    extends:cc.Object,\n\n    properties:{\n\n    },\n\n    ctor:function () {\n\n        this.spDic = {};\n        this.atlas = {};\n    },\n\n    //单一的图片加载  \"resources/png/\" + pngname\n    getFrameByName:function (fileName) {\n\n        let spFrame = this.spDic[fileName];\n        if(!spFrame){\n            var realUrl = cc.url.raw(fileName);\n            var texture = cc.textureCache.addImage(realUrl);\n            spFrame = new cc.SpriteFrame(texture);\n            this.spDic[fileName] = spFrame;\n        }\n        return spFrame;\n    },\n\n\n\n    preLoadAtlas:function (fileName,callBack) {\n\n        let self = this;\n        cc.loader.loadRes(fileName, cc.SpriteAtlas, function (err, atlas) {\n            if(err){\n                console.log(\"preLoadAtlas fail when load \" + fileName);\n            }else{\n                console.log(\"preLoadAtlas OK -> \" + fileName);\n                self.atlas[fileName] = atlas;\n                if(callBack){\n                    callBack();\n                }\n            }\n        });\n    },\n\n\n    //传入的xxx.png需要转化成xxx\n    getFrameFromAtlas:function (fileName,frameNameIn) {\n        if(!frameNameIn){\n            console.log(\"your input file is wrong\",frameNameIn);\n            return null;\n        }\n        \n        let frameName =  frameNameIn.split(\".\")[0];\n        let atlas = this.atlas[fileName];\n        let frame = null;\n        if(atlas){\n            frame = atlas.getSpriteFrame(frameName);\n        }else{\n            this.preLoadAtlas(fileName,this.getFrameFromAtlas.bind(this,fileName,frameName));\n        }\n        return frame;\n    },\n\n\n\n});\n\n\nlet Center = new SC();\nmodule.exports = Center;"]}