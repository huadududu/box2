{"version":3,"sources":["BlockSmall.js"],"names":["GameType","require","SpriteFrameCenter","BlockConfig","cc","Class","extends","Component","properties","sp","Sprite","lineNum","columnNum","type","default","profabType","BlockSmall","override","visible","pngID","init","BingLog","log","onLoad","setBlockPng","pngname","spriteFrame","getFrameFromAtlas","resources","getPngId","texiao","updateNode","runClick","runAction","s1","scaleTo","s2","callback","callFunc","bind","seq","sequence","node"],"mappings":";;;;;;AAAA;;;;AAIA,IAAIA,WAAWC,QAAQ,UAAR,CAAf;AACA,IAAIC,oBAAoBD,QAAQ,mBAAR,CAAxB;AACA,IAAIE,cAAcF,QAAQ,aAAR,CAAlB;AACAG,GAAGC,KAAH,CAAS;AACDC,aAAQF,GAAGG,SADV;;AAGLC,gBAAW;AACPC,YAAGL,GAAGM,MADC;AAEPC,iBAAQ,CAFD;AAGPC,mBAAU,CAHH;AAIPC,cAAK;AACDC,qBAAQd,SAASe,UAAT,CAAoBC,UAD3B;AAEDC,sBAAS,IAFR;AAGDC,qBAAQ;AAHP,SAJE;AASPC,eAAM;AACFL,qBAAQ,CADN;AAEFI,qBAAQ;AAFN;AATC,KAHN;;AAkBL;AACAE,UAAK,gBAAY;AACbC,gBAAQC,GAAR,CAAY,kBAAZ;AACH,KArBI;;AAuBLC,YAAO,kBAAY;AACf;AACA;AACH,KA1BI;AA2BLC,iBAAa,qBAASC,OAAT,EAAiB;AAC1B,aAAKN,KAAL,GAAYM,OAAZ;AACA,aAAKhB,EAAL,CAAQiB,WAAR,GAAsBxB,kBAAkByB,iBAAlB,CAAoC,SAApC,EAA8CxB,YAAYsB,OAAZ,EAAqBG,SAArB,GAA+B,MAA7E,CAAtB;AACH,KA9BI;AA+BLC,cAAS,oBAAU;AACf,eAAO1B,YAAY,KAAKgB,KAAjB,EAAwBW,MAA/B;AACH,KAjCI;AAkCLC,gBAAW,sBAAY;AACnB;AACA;AACA;AACA;AACH,KAvCI;AAwCLC,cAAS,oBAAY;AACjB;AACA;AACA;AACA,aAAKC,SAAL,GAAkB,IAAlB;AACA,YAAIC,KAAK9B,GAAG+B,OAAH,CAAW,GAAX,EAAe,GAAf,EAAmB,GAAnB,CAAT;AACA,YAAIC,KAAKhC,GAAG+B,OAAH,CAAW,IAAX,EAAgB,CAAhB,EAAkB,CAAlB,CAAT;AACA,YAAIE,WAAWjC,GAAGkC,QAAH,CAAY,YAAY;AACnC,iBAAKL,SAAL,GAAkB,KAAlB;AACH,SAF0B,CAEzBM,IAFyB,CAEpB,IAFoB,CAAZ,CAAf;AAGA,YAAIC,MAAMpC,GAAGqC,QAAH,CAAYP,EAAZ,EAAeE,EAAf,EAAkBC,QAAlB,CAAV;AACA,aAAK5B,EAAL,CAAQiC,IAAR,CAAaT,SAAb,CAAuBO,GAAvB;AACH;AApDI,CAAT","file":"BlockSmall.js","sourceRoot":"../../../../../assets/src/model","sourcesContent":["/**\n * Created by bing on 18/04/2018.\n */\n\nlet GameType = require(\"GameType\");\nlet SpriteFrameCenter = require(\"SpriteFrameCenter\");\nlet BlockConfig = require(\"BlockConfig\");\ncc.Class({\n        extends:cc.Component,\n\n    properties:{\n        sp:cc.Sprite,\n        lineNum:0,\n        columnNum:0,\n        type:{\n            default:GameType.profabType.BlockSmall,\n            override:true,\n            visible:false\n        },\n        pngID:{\n            default:1,\n            visible:false,\n        }\n    },\n\n    //count\n    init:function () {\n        BingLog.log(\"BlockSmall init:\");\n    },\n\n    onLoad:function () {\n        // BingLog.log(\"tanke onLoad\");\n        // this.updateNode();\n    },\n    setBlockPng: function(pngname){\n        this.pngID= pngname;\n        this.sp.spriteFrame = SpriteFrameCenter.getFrameFromAtlas(\"png/box\",BlockConfig[pngname].resources+\".png\");\n    },\n    getPngId:function(){\n        return BlockConfig[this.pngID].texiao;\n    },\n    updateNode:function () {\n        // let self=this;\n        // cc.loader.loadRes('png/', cc.SpriteFrame, function (err, spriteFrame) {\n        //     self.sp.getComponent(cc.Sprite).spriteFrame = spriteFrame;\n        // });\n    },\n    runClick:function () {\n        // if(this.runAction){\n        //   return;\n        //}\n        this.runAction  = true;\n        let s1 = cc.scaleTo(0.1,1.1,1.1);\n        let s2 = cc.scaleTo(0.09,1,1);\n        let callback = cc.callFunc(function () {\n            this.runAction  = false;\n        }.bind(this));\n        let seq = cc.sequence(s1,s2,callback);\n        this.sp.node.runAction(seq);\n    }\n});"]}