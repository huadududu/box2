{"version":3,"sources":["TouchView.js"],"names":["cc","Class","extends","Component","properties","touchStartCallBack","default","visible","touchEndCallBack","touchCancelCallBack","touchMoveCallBack","multMoveCallBack","onLoad","node","on","Node","EventType","TOUCH_START","touchEvent","TOUCH_MOVE","TOUCH_CANCEL","TOUCH_END","touchRect","rect","width","height","eventMap","event","touches","getTouches","console","log","length","type","touch1","touch2","delta1","getDelta","delta2","touchPoint1","currentTarget","convertToNodeSpaceAR","getLocation","touchPoint2","mutiTouch","location","locationInNode","convertToNodeSpace","rectContainsPoint","callback","locationInNode1","convertToWorldSpace"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;;AAELC,aAASF,GAAGG,SAFP;AAGLC,gBAAY;AACRC,4BAAoB;AAChBC,qBAAQ,IADQ;AAEhBC,qBAAQ;AAFQ,SADZ;AAKRC,0BAAmB;AACfF,qBAAQ,IADO;AAEfC,qBAAQ;AAFO,SALX;AASRE,6BAAoB;AAChBH,qBAAQ,IADQ;AAEhBC,qBAAQ;AAFQ,SATZ;AAaRG,2BAAmB;AACfJ,qBAAQ,IADO;AAEfC,qBAAQ;AAFO,SAbX;AAiBRI,0BAAiB;AACbL,qBAAQ,IADK;AAEbC,qBAAQ;AAFK;AAjBT,KAHP;;AA0BLK,YAAQ,kBAAY;;AAGhB,aAAKC,IAAL,CAAUC,EAAV,CAAad,GAAGe,IAAH,CAAQC,SAAR,CAAkBC,WAA/B,EAA4C,KAAKC,UAAjD,EAA6D,IAA7D;AACA,aAAKL,IAAL,CAAUC,EAAV,CAAad,GAAGe,IAAH,CAAQC,SAAR,CAAkBG,UAA/B,EAA2C,KAAKD,UAAhD,EAA4D,IAA5D;AACA,aAAKL,IAAL,CAAUC,EAAV,CAAad,GAAGe,IAAH,CAAQC,SAAR,CAAkBI,YAA/B,EAA6C,KAAKF,UAAlD,EAA8D,IAA9D;AACA,aAAKL,IAAL,CAAUC,EAAV,CAAad,GAAGe,IAAH,CAAQC,SAAR,CAAkBK,SAA/B,EAA0C,KAAKH,UAA/C,EAA2D,IAA3D;;AAEA,aAAKI,SAAL,GAAiBtB,GAAGuB,IAAH,CAAQ,CAAR,EAAW,CAAX,EAAc,KAAKV,IAAL,CAAUW,KAAxB,EAA+B,KAAKX,IAAL,CAAUY,MAAzC,CAAjB;AACA;;AAEA,aAAKC,QAAL,GAAgB,EAAhB;AACA,aAAKA,QAAL,CAAc1B,GAAGe,IAAH,CAAQC,SAAR,CAAkBC,WAAhC,IAA+C,KAAKZ,kBAApD;AACA,aAAKqB,QAAL,CAAc1B,GAAGe,IAAH,CAAQC,SAAR,CAAkBK,SAAhC,IAA6C,KAAKb,gBAAlD;AACA,aAAKkB,QAAL,CAAc1B,GAAGe,IAAH,CAAQC,SAAR,CAAkBG,UAAhC,IAA8C,KAAKT,iBAAnD;AACA,aAAKgB,QAAL,CAAc1B,GAAGe,IAAH,CAAQC,SAAR,CAAkBI,YAAhC,IAAgD,KAAKX,mBAArD;AAEH,KA3CI;;AA6CLS,gBAAY,oBAAUS,KAAV,EAAiB;AACzB,YAAIC,UAAUD,MAAME,UAAN,EAAd;AACAC,gBAAQC,GAAR,CAAY,aAAWH,QAAQI,MAA/B,EAAuCL,MAAMM,IAA7C;AACA,YAAIL,QAAQI,MAAR,IAAiB,CAAjB,IAAsBhC,GAAGe,IAAH,CAAQC,SAAR,CAAkBG,UAAlB,IAAgCQ,MAAMM,IAAhE,EAAqE;AACjE,gBAAIC,SAASN,QAAQ,CAAR,CAAb;AACA,gBAAIO,SAASP,QAAQ,CAAR,CAAb;AACA,gBAAIQ,SAASF,OAAOG,QAAP,EAAb;AAAA,gBAAgCC,SAASH,OAAOE,QAAP,EAAzC;AACA,gBAAIE,cAAcZ,MAAMa,aAAN,CAAoBC,oBAApB,CAAyCP,OAAOQ,WAAP,EAAzC,CAAlB;AACA,gBAAIC,cAAchB,MAAMa,aAAN,CAAoBC,oBAApB,CAAyCN,OAAOO,WAAP,EAAzC,CAAlB;AACA;AACA,gBAAG,KAAK/B,gBAAR,EAAyB;AACrB,qBAAKA,gBAAL,CAAsB4B,WAAtB,EAAkCI,WAAlC;AACH;AACD,iBAAKC,SAAL,GAAiB,IAAjB;AACD;AACC;AACH;;AAED,YAAG,KAAKA,SAAL,IACC5C,GAAGe,IAAH,CAAQC,SAAR,CAAkBK,SAAlB,IAA+BM,MAAMM,IADzC,EAEA;AACI;AACA;AACH,SALD,MAKK;AACD,iBAAKW,SAAL,GAAkB,KAAlB;AACH;;AAED;AACA,YAAIC,WAAWlB,MAAMe,WAAN,EAAf;AACA;AACA,YAAII,iBAAiBnB,MAAMa,aAAN,CAAoBO,kBAApB,CAAuCpB,MAAMe,WAAN,EAAvC,CAArB;;AAEA,YAAI1C,GAAGgD,iBAAH,CAAqB,KAAK1B,SAA1B,EAAqCwB,cAArC,CAAJ,EAA0D;AACtD,gBAAIG,WAAW,KAAKvB,QAAL,CAAcC,MAAMM,IAApB,CAAf;AACA,gBAAIgB,QAAJ,EAAc;AACV,oBAAIC,kBAAkBvB,MAAMa,aAAN,CAAoBW,mBAApB,CAAwCL,cAAxC,CAAtB;AACAG,yBAASC,eAAT;AACH;AACD;AACH,SAPD,MAOM;AACF;AACH;AACJ;;AAvFI,CAAT","file":"TouchView.js","sourceRoot":"../../../../../assets/src/view","sourcesContent":["cc.Class({\n\n    extends: cc.Component,\n    properties: {\n        touchStartCallBack: {\n            default:null,\n            visible:false\n        },\n        touchEndCallBack:  {\n            default:null,\n            visible:false\n        },\n        touchCancelCallBack:{\n            default:null,\n            visible:false\n        },\n        touchMoveCallBack: {\n            default:null,\n            visible:false\n        },\n        multMoveCallBack:{\n            default:null,\n            visible:false\n        }\n    },\n\n    onLoad: function () {\n\n\n        this.node.on(cc.Node.EventType.TOUCH_START, this.touchEvent, this);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.touchEvent, this);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.touchEvent, this);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.touchEvent, this);\n\n        this.touchRect = cc.rect(0, 0, this.node.width, this.node.height);\n        // cc.log(\"touchRect:\", this.touchRect.width, this.touchRect.height);\n\n        this.eventMap = {};\n        this.eventMap[cc.Node.EventType.TOUCH_START] = this.touchStartCallBack;\n        this.eventMap[cc.Node.EventType.TOUCH_END] = this.touchEndCallBack;\n        this.eventMap[cc.Node.EventType.TOUCH_MOVE] = this.touchMoveCallBack;\n        this.eventMap[cc.Node.EventType.TOUCH_CANCEL] = this.touchCancelCallBack;\n\n    },\n\n    touchEvent: function (event) {\n        let touches = event.getTouches();\n        console.log(\"touches:\"+touches.length, event.type);\n        if( touches.length >=2 && cc.Node.EventType.TOUCH_MOVE == event.type){\n            var touch1 = touches[0];\n            var touch2 = touches[1];\n            var delta1 = touch1.getDelta(), delta2 = touch2.getDelta();\n            var touchPoint1 = event.currentTarget.convertToNodeSpaceAR(touch1.getLocation());\n            var touchPoint2 = event.currentTarget.convertToNodeSpaceAR(touch2.getLocation());\n            // var touchPoint2 = null;\n            if(this.multMoveCallBack){\n                this.multMoveCallBack(touchPoint1,touchPoint2);\n            }\n            this.mutiTouch  =true;\n           // console.log(\"multMoveCallBack\",this.multMoveCallBack);\n            return;\n        }\n\n        if(this.mutiTouch &&\n            cc.Node.EventType.TOUCH_END != event.type)\n        {\n            //TODO::\n            return;\n        }else{\n            this.mutiTouch  = false;\n        }\n\n        // console.log('touches:'+touches.length);\n        let location = event.getLocation();\n        // console.log('location:'+location.length);\n        let locationInNode = event.currentTarget.convertToNodeSpace(event.getLocation());\n\n        if (cc.rectContainsPoint(this.touchRect, locationInNode)) {\n            let callback = this.eventMap[event.type];\n            if (callback) {\n                let locationInNode1 = event.currentTarget.convertToWorldSpace(locationInNode);\n                callback(locationInNode1);\n            }\n            // cc.log(\" touch in\");\n        }else {\n            // cc.log(\" touch out\");\n        }\n    },\n\n})\n;"]}